diff --git a/vendor/signifyd/module-connect/Model/ConfigProvider.php b/vendor/signifyd/module-connect/Model/ConfigProvider.php
index 1e1d928..e56ba28 100644
--- a/vendor/signifyd/module-connect/Model/ConfigProvider.php
+++ b/vendor/signifyd/module-connect/Model/ConfigProvider.php
@@ -8,6 +8,8 @@
 
 namespace Signifyd\Connect\Model;
 
+use Magento\Framework\Component\ComponentRegistrar;
+use Magento\Framework\Component\ComponentRegistrarInterface;
 use Magento\Store\Model\StoreManagerInterface;
 use Signifyd\Connect\Helper\ConfigHelper;
 use Magento\Framework\Module\ModuleListInterface;
@@ -30,19 +32,36 @@ class ConfigProvider implements \Magento\Checkout\Model\ConfigProviderInterface
     public $moduleListInterface;
 
     /**
+     * @var ComponentRegistrarInterface
+     */
+    public $componentRegistrar;
+
+    /**
+     * ConfigProvider constructor
+     *
      * @param ConfigHelper $configHelper
      * @param StoreManagerInterface $storeManager
      * @param ModuleListInterface $moduleListInterface
+     * @param ComponentRegistrarInterface $componentRegistrar
      */
     public function __construct(
         ConfigHelper $configHelper,
         StoreManagerInterface $storeManager,
-        ModuleListInterface $moduleListInterface
+        ModuleListInterface $moduleListInterface,
+        ComponentRegistrarInterface $componentRegistrar
     ) {
         $this->storeManager = $storeManager;
         $this->moduleListInterface = $moduleListInterface;
         $this->configHelper = $configHelper;
+        $this->componentRegistrar = $componentRegistrar;
     }
+
+    /**
+     * Get config
+     *
+     * @return array[]
+     * @throws \Magento\Framework\Exception\NoSuchEntityException
+     */
     public function getConfig()
     {
         $policyName = $this->configHelper->getPolicyName(
@@ -52,10 +71,9 @@ class ConfigProvider implements \Magento\Checkout\Model\ConfigProviderInterface
 
         $isAdyenGreaterThanEightEighteen = false;
         $isAdyenGreaterThanEight = false;
-        $adyenModule = $this->moduleListInterface->getOne('Adyen_Payment');
+        $adyenVersion = $this->getAdyenModuleVersion();
 
-        if (isset($adyenModule)) {
-            $adyenVersion = $this->moduleListInterface->getOne('Adyen_Payment')['setup_version'];
+        if (isset($adyenVersion)) {
             $isAdyenGreaterThanEightEighteen = version_compare($adyenVersion, '8.18.0') >= 0;
             $isAdyenGreaterThanEight = version_compare($adyenVersion, '8.0.0') >= 0 &&
                 version_compare($adyenVersion, '8.17.9') <= 0;
@@ -74,4 +92,30 @@ class ConfigProvider implements \Magento\Checkout\Model\ConfigProviderInterface
             'isAdyenGreaterThanEight' => $isAdyenGreaterThanEight]
         ];
     }
+
+    /**
+     * Get Adyen module version
+     *
+     * @return mixed|null
+     */
+    public function getAdyenModuleVersion()
+    {
+        $moduleDir = $this->componentRegistrar->getPath(
+            ComponentRegistrar::MODULE,
+            'Adyen_Payment'
+        );
+
+        if (isset($moduleDir) === false) {
+            return null;
+        }
+
+        $composerJson = file_get_contents($moduleDir . '/composer.json');
+        $composerJson = json_decode($composerJson, true);
+
+        if (empty($composerJson['version'])) {
+            return null;
+        }
+
+        return $composerJson['version'];
+    }
 }
diff --git a/vendor/signifyd/module-connect/Plugin/Adyen/Payment/Controller/Process/Json.php b/vendor/signifyd/module-connect/Plugin/Adyen/Payment/Controller/Process/Json.php
index 13d8e9e..3448e06 100644
--- a/vendor/signifyd/module-connect/Plugin/Adyen/Payment/Controller/Process/Json.php
+++ b/vendor/signifyd/module-connect/Plugin/Adyen/Payment/Controller/Process/Json.php
@@ -74,7 +74,8 @@ class Json
     public $requestHttp;
 
     /**
-     * CheckoutPaymentsDetailsHandler constructor.
+     * Json constructor.
+     *
      * @param CasedataFactory $casedataFactory
      * @param CasedataResourceModel $casedataResourceModel
      * @param Logger $logger
@@ -113,6 +114,16 @@ class Json
         $this->requestHttp = $requestHttp;
     }
 
+    /**
+     * Transactions integration for Adyen versions lower than 9.0.0
+     *
+     * @param AdyenJson $subject
+     * @return void|null
+     * @throws \Magento\Framework\Exception\AlreadyExistsException
+     * @throws \Magento\Framework\Exception\NoSuchEntityException
+     * @throws \Signifyd\Core\Exceptions\ApiException
+     * @throws \Signifyd\Core\Exceptions\InvalidClassException
+     */
     public function beforeExecute(AdyenJson $subject)
     {
         $policyName = $this->configHelper->getPolicyName(
diff --git a/vendor/signifyd/module-connect/Plugin/Adyen/Payment/Controller/Webhook/Index.php b/vendor/signifyd/module-connect/Plugin/Adyen/Payment/Controller/Webhook/Index.php
new file mode 100644
index 0000000..8063051
--- /dev/null
+++ b/vendor/signifyd/module-connect/Plugin/Adyen/Payment/Controller/Webhook/Index.php
@@ -0,0 +1,236 @@
+<?php
+
+namespace Signifyd\Connect\Plugin\Adyen\Payment\Controller\Webhook;
+
+use Adyen\Payment\Controller\Webhook\Index as AdyenIndex;
+use Magento\Framework\Serialize\Serializer\Json as JsonSerializer;
+use Signifyd\Connect\Helper\ConfigHelper;
+use Signifyd\Connect\Logger\Logger;
+use Signifyd\Connect\Model\Api\Core\Client;
+use Signifyd\Connect\Model\CasedataFactory;
+use Signifyd\Connect\Model\ResourceModel\Casedata as CasedataResourceModel;
+use Magento\Store\Model\StoreManagerInterface;
+use Magento\Quote\Model\QuoteFactory;
+use Magento\Quote\Model\ResourceModel\Quote as QuoteResourceModel;
+use Signifyd\Connect\Model\Api\TransactionsFactory;
+use Magento\Framework\App\Request\Http as RequestHttp;
+
+class Index
+{
+    /**
+     * @var CasedataFactory
+     */
+    public $casedataFactory;
+
+    /**
+     * @var CasedataResourceModel
+     */
+    public $casedataResourceModel;
+
+    /**
+     * @var Logger
+     */
+    public $logger;
+
+    /**
+     * @var StoreManagerInterface
+     */
+    public $storeManager;
+
+    /**
+     * @var QuoteFactory
+     */
+    public $quoteFactory;
+
+    /**
+     * @var QuoteResourceModel
+     */
+    public $quoteResourceModel;
+
+    /**
+     * @var TransactionsFactory
+     */
+    public $transactionsFactory;
+
+    /**
+     * @var ConfigHelper
+     */
+    public $configHelper;
+
+    /**
+     * @var Client
+     */
+    public $client;
+
+    /**
+     * @var JsonSerializer
+     */
+    public $jsonSerializer;
+
+    /**
+     * @var RequestHttp
+     */
+    public $requestHttp;
+
+    /**
+     * Index constructor.
+     *
+     * @param CasedataFactory $casedataFactory
+     * @param CasedataResourceModel $casedataResourceModel
+     * @param Logger $logger
+     * @param StoreManagerInterface $storeManager
+     * @param QuoteFactory $quoteFactory
+     * @param QuoteResourceModel $quoteResourceModel
+     * @param TransactionsFactory $transactionsFactory
+     * @param ConfigHelper $configHelper
+     * @param Client $client
+     * @param JsonSerializer $jsonSerializer
+     * @param RequestHttp $requestHttp
+     */
+    public function __construct(
+        CasedataFactory $casedataFactory,
+        CasedataResourceModel $casedataResourceModel,
+        Logger $logger,
+        StoreManagerInterface $storeManager,
+        QuoteFactory $quoteFactory,
+        QuoteResourceModel $quoteResourceModel,
+        TransactionsFactory $transactionsFactory,
+        ConfigHelper $configHelper,
+        Client $client,
+        JsonSerializer $jsonSerializer,
+        RequestHttp $requestHttp
+    ) {
+        $this->casedataFactory = $casedataFactory;
+        $this->casedataResourceModel = $casedataResourceModel;
+        $this->logger = $logger;
+        $this->storeManager = $storeManager;
+        $this->quoteFactory = $quoteFactory;
+        $this->quoteResourceModel = $quoteResourceModel;
+        $this->transactionsFactory = $transactionsFactory;
+        $this->configHelper = $configHelper;
+        $this->client = $client;
+        $this->jsonSerializer = $jsonSerializer;
+        $this->requestHttp = $requestHttp;
+    }
+
+    /**
+     * Transactions integration for Adyen version 9.0.0 or higher
+     *
+     * @param AdyenIndex $subject
+     * @return void|null
+     * @throws \Magento\Framework\Exception\AlreadyExistsException
+     * @throws \Magento\Framework\Exception\NoSuchEntityException
+     * @throws \Signifyd\Core\Exceptions\ApiException
+     * @throws \Signifyd\Core\Exceptions\InvalidClassException
+     */
+    public function beforeExecute(AdyenIndex $subject)
+    {
+        $policyName = $this->configHelper->getPolicyName(
+            \Magento\Store\Model\ScopeInterface::SCOPE_STORES,
+            $this->storeManager->getStore()->getId()
+        );
+
+        $isPreAuth = $this->configHelper->getIsPreAuth(
+            $policyName,
+            'adyen_cc',
+            \Magento\Store\Model\ScopeInterface::SCOPE_STORES,
+            $this->storeManager->getStore()->getId()
+        );
+
+        $notificationItems = $this->jsonSerializer->unserialize($this->requestHttp->getContent());
+
+        if ($isPreAuth === false && empty($notificationItems) === true) {
+            return null;
+        }
+
+        if (isset($notificationItems['notificationItems']) &&
+            isset($notificationItems['notificationItems'][0]) &&
+            isset($notificationItems['notificationItems'][0]['NotificationRequestItem']) &&
+            isset($notificationItems['notificationItems'][0]['NotificationRequestItem']['merchantReference']) &&
+            isset($notificationItems['notificationItems'][0]['NotificationRequestItem']['success']) &&
+            isset($notificationItems['notificationItems'][0]['NotificationRequestItem']['reason'])
+        ) {
+            $orderIncrement =
+                $notificationItems['notificationItems'][0]['NotificationRequestItem']['merchantReference'];
+            $isSuccess = $notificationItems['notificationItems'][0]['NotificationRequestItem']['success'];
+            $reason = $notificationItems['notificationItems'][0]['NotificationRequestItem']['reason'];
+
+            /** @var \Signifyd\Connect\Model\Casedata $case */
+            $case = $this->casedataFactory->create();
+            $this->casedataResourceModel->load($case, $orderIncrement, 'order_increment');
+
+            if ($case->isEmpty() === false && $isSuccess === "false") {
+                if ($case->getEntries('AdyenRefusedReason') == $reason) {
+                    return null;
+                }
+
+                $this->logger->info(
+                    "collecting Adyen pre-authorization transaction data for case " . $case->getCode(),
+                    ['entity' => $case]
+                );
+
+                $adyenData = [];
+                $case->setEntries("AdyenRefusedReason", $reason);
+                $this->casedataResourceModel->save($case);
+
+                switch ($reason) {
+                    case "Expired Card":
+                        $signifydReason = "EXPIRED_CARD";
+                        break;
+
+                    case "Invalid Card Number":
+                        $signifydReason = "INCORRECT_NUMBER";
+                        break;
+
+                    case "Not enough balance":
+                        $signifydReason = "INSUFFICIENT_FUNDS";
+                        break;
+
+                    case "Acquirer Fraud":
+                    case "FRAUD":
+                    case "FRAUD-CANCELLED":
+                    case "Issuer Suspected Fraud":
+                        $signifydReason = "FRAUD_DECLINE";
+                        break;
+
+                    case "CVC Declined":
+                        $signifydReason = "INVALID_CVC";
+                        break;
+
+                    case "Restricted Card":
+                        $signifydReason = "RESTRICTED_CARD";
+                        break;
+
+                    default:
+                        $signifydReason = "CARD_DECLINED";
+                        break;
+                }
+
+                $adyenData['gatewayRefusedReason'] = $signifydReason;
+                $adyenData['gateway'] = 'adyen_cc';
+
+                if (isset($notificationItems['notificationItems'][0]['NotificationRequestItem']['additionalData'])) {
+                    $adyenData['cardLast4'] =
+                        $notificationItems['notificationItems'][0]
+                        ['NotificationRequestItem']['additionalData']['cardSummary'] ?? null;
+
+                    if (isset($notificationItems['notificationItems']
+                        [0]['NotificationRequestItem']['additionalData']['expiryDate'])) {
+                        $expiryDate = $notificationItems['notificationItems'][0]
+                        ['NotificationRequestItem']['additionalData']['expiryDate'];
+                        $expiryDateArray = explode('/', $expiryDate);
+                        $adyenData['cardExpiryMonth'] = $expiryDateArray[0];
+                        $adyenData['cardExpiryYear'] = $expiryDateArray[1];
+                    }
+                }
+
+                $quote = $this->quoteFactory->create();
+                $this->quoteResourceModel->load($quote, $case->getQuoteId());
+                $makeTransactions = $this->transactionsFactory->create();
+                $transaction = $makeTransactions($quote, $case->getCheckoutToken(), $adyenData);
+
+                $this->client->postTransactionToSignifyd($transaction, $quote);
+            }
+        }
+    }
+}
\ No newline at end of file
diff --git a/vendor/signifyd/module-connect/docs/PASS-PAYMENT-PRE-AUTH.md b/vendor/signifyd/module-connect/docs/PASS-PAYMENT-PRE-AUTH.md
index 58f8958..cbb0284 100644
--- a/vendor/signifyd/module-connect/docs/PASS-PAYMENT-PRE-AUTH.md
+++ b/vendor/signifyd/module-connect/docs/PASS-PAYMENT-PRE-AUTH.md
@@ -83,7 +83,7 @@ git apply pre-auth-authorizenet.patch
 
 ### Adyen
 #### Link to the extension https://github.com/Adyen/adyen-magento2
-#### Tested on 9.3.0
+#### Tested on 9.5.3
 
 - Call transaction API on failure: yes
 - Payment data available:
@@ -94,7 +94,7 @@ git apply pre-auth-authorizenet.patch
 
 ### Adyen One-click (saved cards)
 #### Link to the extension https://github.com/Adyen/adyen-magento2
-#### Tested on 9.3.0
+#### Tested on 9.5.3
 
 - Call transaction API on failure: yes
 - Payment data available:
diff --git a/vendor/signifyd/module-connect/etc/di.xml b/vendor/signifyd/module-connect/etc/di.xml
index cc164e3..6d6b24b 100644
--- a/vendor/signifyd/module-connect/etc/di.xml
+++ b/vendor/signifyd/module-connect/etc/di.xml
@@ -185,6 +185,10 @@
         <plugin name="Signifyd_Connect_Plugin_Magento_Csp_Model_Collector_ControllerCollector" type="Signifyd\Connect\Plugin\Magento\Csp\Model\Collector\ControllerCollector"/>
     </type>
 
+    <type name="Adyen\Payment\Controller\Webhook\Index">
+        <plugin name="Signifyd_Connect_Plugin_Adyen_Payment_Controller_Webhook_Index" type="\Signifyd\Connect\Plugin\Adyen\Payment\Controller\Webhook\Index" />
+    </type>
+
     <!-- Preferences -->
     <preference for="Magento\Reports\Block\Adminhtml\Shopcart\Abandoned\Grid" type="Signifyd\Connect\Block\Adminhtml\Shopcart\Abandoned\Grid" />
     <preference for="Magento\Sales\Model\Order\Payment" type="Signifyd\Connect\Model\Magento\Sales\Model\Order\Payment" />
